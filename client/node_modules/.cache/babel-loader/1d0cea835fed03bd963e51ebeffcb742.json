{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../firebase/firebase.utils';\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE, SET_CURRENT_USER, TOGGLE_CART_HIDDEN, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART, CLEAR_ITEM_FROM_CART } from '../actions/actions.type'; //generator fucntions\n\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I am fired');\n  const collectionRef = yield firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n} // export const fetchCollectionsStartAsync = () => {\n//   return (dispatch) => {\n//     const collectionRef = firestore.collection('collections');\n//     dispatch(fetchCollectionsStart());\n//     collectionRef\n//       .get()\n//       .then((snapshot) => {\n//         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//         dispatch(fetchCollectionsSuccess(collectionsMap));\n//       })\n//       .catch((error) => dispatch(fetchCollectionsFailure(error)));\n//   };\n// };","map":{"version":3,"sources":["/Users/tuandinh/Documents/workspace/e-commerce/src/sagas/shop.sagas.js"],"names":["takeEvery","firestore","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","SET_CURRENT_USER","TOGGLE_CART_HIDDEN","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","CLEAR_ITEM_FROM_CART","fetchCollectionsStartAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,SAASC,SAAT,QAA0B,4BAA1B;AAEA,SACEC,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,EAIEC,gBAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,qBAPF,EAQEC,oBARF,QASO,yBATP,C,CAWA;;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAG,MAAMZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAA5B;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AAEAH,EAAAA,aAAa,CACVI,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAJ,IAAAA,QAAQ,CAACO,uBAAuB,CAACF,cAAD,CAAxB,CAAR;AACD,GALH,EAMGG,KANH,CAMUC,KAAD,IAAWT,QAAQ,CAACU,uBAAuB,CAACD,KAAD,CAAxB,CAN5B;AAOD;AAED,OAAO,UAAUR,qBAAV,GAAkC;AACvC,QAAMhB,SAAS,CAACE,uBAAD,EAA0BQ,0BAA1B,CAAf;AACD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport { firestore } from '../firebase/firebase.utils';\n\nimport {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE,\n  SET_CURRENT_USER,\n  TOGGLE_CART_HIDDEN,\n  ADD_ITEM_TO_CART,\n  REMOVE_ITEM_FROM_CART,\n  CLEAR_ITEM_FROM_CART,\n} from '../actions/actions.type';\n\n//generator fucntions\n\nexport function* fetchCollectionsStartAsync() {\n  yield console.log('I am fired');\n  const collectionRef = yield firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\n\n// export const fetchCollectionsStartAsync = () => {\n//   return (dispatch) => {\n//     const collectionRef = firestore.collection('collections');\n//     dispatch(fetchCollectionsStart());\n\n//     collectionRef\n//       .get()\n//       .then((snapshot) => {\n//         const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//         dispatch(fetchCollectionsSuccess(collectionsMap));\n//       })\n//       .catch((error) => dispatch(fetchCollectionsFailure(error)));\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}