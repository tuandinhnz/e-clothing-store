{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { SET_CURRENT_USER, TOGGLE_CART_HIDDEN, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART } from '../actions/actions.type';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\nconst USER_INITIAL_STATE = {\n  currentUser: null\n};\nconst CART_INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst userReducer = (state = USER_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case ADD_ITEM_TO_CART:\n      //add item to an array nested inside an object\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case REMOVE_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: cartItems.filter(cartItem => cartItem !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});","map":{"version":3,"sources":["/Users/tuandinh/Documents/workspace/e-commerce/src/reducers/reducers.js"],"names":["combineReducers","SET_CURRENT_USER","TOGGLE_CART_HIDDEN","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","addItemToCart","removeItemFromCart","USER_INITIAL_STATE","currentUser","CART_INITIAL_STATE","hidden","cartItems","userReducer","state","action","type","payload","cartReducer","CLEAR_ITEM_FROM_CART","filter","cartItem","user","cart"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,gBAHF,EAIEC,qBAJF,QAKO,yBALP;AAMA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,WAAW,EAAE;AADY,CAA3B;AAIA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE,IADiB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA3B;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,kBAAT,EAA6BO,MAA7B,KAAwC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,gBAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYL,QAAAA,WAAW,EAAEM,MAAM,CAACE;AAAhC,OAAP;;AACF;AACE,aAAOH,KAAP;AAJJ;AAMD,CAPD;;AASA,MAAMI,WAAW,GAAG,CAACJ,KAAK,GAAGJ,kBAAT,EAA6BK,MAA7B,KAAwC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,kBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFV,OAAP;;AAIF,SAAKP,gBAAL;AACE;AACA,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,SAAS,EAAEN,aAAa,CAACQ,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAFnB,OAAP;;AAIF,SAAKZ,qBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,SAAS,EAAEL,kBAAkB,CAACO,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACE,OAAzB;AAFxB,OAAP;;AAIF,SAAKE,oBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,SAAS,EAAEA,SAAS,CAACQ,MAAV,CAAkBC,QAAD,IAAcA,QAAQ,KAAKN,MAAM,CAACE,OAAnD;AAFN,OAAP;;AAIF;AACE,aAAOH,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeb,eAAe,CAAC;AAC7BqB,EAAAA,IAAI,EAAET,WADuB;AAE7BU,EAAAA,IAAI,EAAEL;AAFuB,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  SET_CURRENT_USER,\n  TOGGLE_CART_HIDDEN,\n  ADD_ITEM_TO_CART,\n  REMOVE_ITEM_FROM_CART,\n} from '../actions/actions.type';\nimport { addItemToCart, removeItemFromCart } from './cart.utils';\n\nconst USER_INITIAL_STATE = {\n  currentUser: null,\n};\n\nconst CART_INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst userReducer = (state = USER_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return { ...state, currentUser: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst cartReducer = (state = CART_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden,\n      };\n    case ADD_ITEM_TO_CART:\n      //add item to an array nested inside an object\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    case REMOVE_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload),\n      };\n    case CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: cartItems.filter((cartItem) => cartItem !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n});\n"]},"metadata":{},"sourceType":"module"}