{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from '../actions';\nimport { FETCH_COLLECTIONS_START } from '../actions/actions.type'; //generator fucntions\n\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); //call is an effect used to invoke a function in Saga\n\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); //put is similar to dispatch used to dispatch an action\n\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}","map":{"version":3,"sources":["/Users/tuandinh/Documents/workspace/e-commerce/src/sagas/shop.saga.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,4BAHP;AAKA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,YAAjE;AAEA,SAASC,uBAAT,QAAwC,yBAAxC,C,CAEA;;AAEA,OAAO,UAAUC,0BAAV,GAAuC;AAC5C,MAAI;AACF,UAAMC,aAAa,GAAG,MAAMN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAA5B;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFE,CAGF;;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BG,+BAD+B,EAE/BO,QAF+B,CAAjC,CAJE,CAQF;;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GAVD,CAUE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CAACO,uBAAD,EAA0BC,0BAA1B,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../firebase/firebase.utils';\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from '../actions';\n\nimport { FETCH_COLLECTIONS_START } from '../actions/actions.type';\n\n//generator fucntions\n\nexport function* fetchCollectionsStartAsync() {\n  try {\n    const collectionRef = yield firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    //call is an effect used to invoke a function in Saga\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    //put is similar to dispatch used to dispatch an action\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(FETCH_COLLECTIONS_START, fetchCollectionsStartAsync);\n}\n"]},"metadata":{},"sourceType":"module"}