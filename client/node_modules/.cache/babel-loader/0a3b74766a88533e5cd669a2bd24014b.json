{"ast":null,"code":"import { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE, SET_CURRENT_USER, TOGGLE_CART_HIDDEN, ADD_ITEM_TO_CART, REMOVE_ITEM_FROM_CART, CLEAR_ITEM_FROM_CART } from './actions.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../firebase/firebase.utils';\nexport const setCurrentUser = user => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user\n  };\n};\nexport const toggleCartHidden = () => {\n  return {\n    type: TOGGLE_CART_HIDDEN\n  };\n};\nexport const addItem = item => {\n  return {\n    type: ADD_ITEM_TO_CART,\n    payload: item\n  };\n};\nexport const removeItem = item => {\n  return {\n    type: REMOVE_ITEM_FROM_CART,\n    payload: item\n  };\n};\nexport const clearItem = item => {\n  return {\n    type: CLEAR_ITEM_FROM_CART,\n    payload: item\n  };\n};\nexport const fetchCollectionsStart = () => {\n  return {\n    type: FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport const fetchCollectionsFailure = errorMessage => {\n  return {\n    type: FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n  };\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["/Users/tuandinh/Documents/workspace/e-commerce/src/actions/index.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","SET_CURRENT_USER","TOGGLE_CART_HIDDEN","ADD_ITEM_TO_CART","REMOVE_ITEM_FROM_CART","CLEAR_ITEM_FROM_CART","firestore","convertCollectionsSnapshotToMap","setCurrentUser","user","type","payload","toggleCartHidden","addItem","item","removeItem","clearItem","fetchCollectionsStart","fetchCollectionsSuccess","collectionsMap","fetchCollectionsFailure","errorMessage","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error"],"mappings":"AAAA,SACEA,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,EAIEC,gBAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,qBAPF,EAQEC,oBARF,QASO,gBATP;AAWA,SACEC,SADF,EAEEC,+BAFF,QAGO,4BAHP;AAKA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAU;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAET,gBADD;AAELU,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AACpC,SAAO;AACLF,IAAAA,IAAI,EAAER;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMW,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLJ,IAAAA,IAAI,EAAEP,gBADD;AAELQ,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,UAAU,GAAID,IAAD,IAAU;AAClC,SAAO;AACLJ,IAAAA,IAAI,EAAEN,qBADD;AAELO,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAU;AACjC,SAAO;AACLJ,IAAAA,IAAI,EAAEL,oBADD;AAELM,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLP,IAAAA,IAAI,EAAEZ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMoB,uBAAuB,GAAIC,cAAD,IAAoB;AACzD,SAAO;AACLT,IAAAA,IAAI,EAAEX,yBADD;AAELY,IAAAA,OAAO,EAAEQ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,uBAAuB,GAAIC,YAAD,IAAkB;AACvD,SAAO;AACLX,IAAAA,IAAI,EAAEV,yBADD;AAELW,IAAAA,OAAO,EAAEU;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AAEAO,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMT,cAAc,GAAGZ,+BAA+B,CAACqB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACL,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KALH,EAMGU,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACH,uBAAuB,CAACU,KAAD,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE,\n  SET_CURRENT_USER,\n  TOGGLE_CART_HIDDEN,\n  ADD_ITEM_TO_CART,\n  REMOVE_ITEM_FROM_CART,\n  CLEAR_ITEM_FROM_CART,\n} from './actions.type';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../firebase/firebase.utils';\n\nexport const setCurrentUser = (user) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: user,\n  };\n};\nexport const toggleCartHidden = () => {\n  return {\n    type: TOGGLE_CART_HIDDEN,\n  };\n};\n\nexport const addItem = (item) => {\n  return {\n    type: ADD_ITEM_TO_CART,\n    payload: item,\n  };\n};\n\nexport const removeItem = (item) => {\n  return {\n    type: REMOVE_ITEM_FROM_CART,\n    payload: item,\n  };\n};\n\nexport const clearItem = (item) => {\n  return {\n    type: CLEAR_ITEM_FROM_CART,\n    payload: item,\n  };\n};\n\nexport const fetchCollectionsStart = () => {\n  return {\n    type: FETCH_COLLECTIONS_START,\n  };\n};\n\nexport const fetchCollectionsSuccess = (collectionsMap) => {\n  return {\n    type: FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap,\n  };\n};\n\nexport const fetchCollectionsFailure = (errorMessage) => {\n  return {\n    type: FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage,\n  };\n};\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}