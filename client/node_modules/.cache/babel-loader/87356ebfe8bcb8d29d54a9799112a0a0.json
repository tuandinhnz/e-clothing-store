{"ast":null,"code":"import { createSelector } from 'reselect'; //input selectors. Select a piece of the state\n\nconst selectCart = state => state.cart; //out put selectors that is created from the input selectors\n\n\nexport const selectCartItems = createSelector( // the fist argument is an array of input selectors, the second argument is a function that return the value we want out of the selector\n[selectCart], cart => cart.cartItems); //Make the itemCount selector\n\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuatity, cartItem) => accumulatedQuatity + cartItem.quantity, 0)); //seletor select the total amount to pay for the items in Cart\n\nexport const selectCartItemsTotalAmount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQuatity, cartItem) => accumulatedQuatity + cartItem.price * cartItem.quantity, 0));","map":{"version":3,"sources":["/Users/tuandinh/Documents/workspace/e-commerce/client/src/selectors/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartItemsCount","reduce","accumulatedQuatity","cartItem","quantity","selectCartItemsTotalAmount","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC,C,CAEA;;;AACA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,EAC3C;AACA,CAACC,UAAD,CAF2C,EAG1CE,IAAD,IAAUA,IAAI,CAACE,SAH4B,CAAtC,C,CAMP;;AAEA,OAAO,MAAMC,oBAAoB,GAAGN,cAAc,CAChD,CAACI,eAAD,CADgD,EAE/CC,SAAD,IACEA,SAAS,CAACE,MAAV,CACE,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAAQ,CAACC,QADlE,EAEE,CAFF,CAH8C,CAA3C,C,CASP;;AAEA,OAAO,MAAMC,0BAA0B,GAAGX,cAAc,CACtD,CAACI,eAAD,CADsD,EAErDC,SAAD,IACEA,SAAS,CAACE,MAAV,CACE,CAACC,kBAAD,EAAqBC,QAArB,KACED,kBAAkB,GAAGC,QAAQ,CAACG,KAAT,GAAiBH,QAAQ,CAACC,QAFnD,EAGE,CAHF,CAHoD,CAAjD","sourcesContent":["import { createSelector } from 'reselect';\n\n//input selectors. Select a piece of the state\nconst selectCart = (state) => state.cart;\n\n//out put selectors that is created from the input selectors\nexport const selectCartItems = createSelector(\n  // the fist argument is an array of input selectors, the second argument is a function that return the value we want out of the selector\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\n//Make the itemCount selector\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuatity, cartItem) => accumulatedQuatity + cartItem.quantity,\n      0\n    )\n);\n\n//seletor select the total amount to pay for the items in Cart\n\nexport const selectCartItemsTotalAmount = createSelector(\n  [selectCartItems],\n  (cartItems) =>\n    cartItems.reduce(\n      (accumulatedQuatity, cartItem) =>\n        accumulatedQuatity + cartItem.price * cartItem.quantity,\n      0\n    )\n);\n"]},"metadata":{},"sourceType":"module"}